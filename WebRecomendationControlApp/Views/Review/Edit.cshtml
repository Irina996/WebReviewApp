@model WebRecomendationControlApp.Models.Review

@{
	ViewData["Title"] = "Edit";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
	function  onChangeAdd()
	{
		let container = document.getElementById("tagsContainer");
		let fields = container.getElementsByTagName("input");

		let i = 0;
		var empty = 0;
		while (fields[i] != undefined)
		{
			if (fields[i].value == "")
			{
				empty = empty + 1;
			}
			i = i + 1;
		}
		if (empty > 1)
		{
			DeleteEmptyTags();
			empty = 0;
		}
		if (empty == 0)
		{
			let fieldCount = container.getElementsByTagName("input").length;
			let nextFieldId = fieldCount + 1;

			let field = document.createElement("input");
				field.setAttribute("id", "Tag[" + nextFieldId + "]");
				field.setAttribute("name", "Tags");
				field.setAttribute("type", "text");
				field.setAttribute("onchange", "onChangeAdd()")

			container.appendChild(field);
		}
	}

	function DeleteEmptyTags() {
		let container = document.getElementById("tagsContainer");
		let fields = container.getElementsByTagName("input");
		let fieldCount = container.getElementsByTagName("input").length;
		var i = 0;
		while (i <= fieldCount && fields[i] != undefined) 
		{
			if (fields[i].value == "") 
			{
				let k = i + 1;
				while (fields[k] != undefined && fields[k].value == "")
				{
					k = k + 1;
				}
				let j = i;
				while ( fields[k] != undefined) 
				{
					fields[j].value = fields[k].value;
					fields[k].value = "";
					j = j + 1;
					k = k + 1;
				}
			}
			i = i + 1;
		}
		i = 0;
		while (fields[i] != undefined)
		{
			if (fields[i].value == "")
			{
				let removedEl = container.removeChild(fields[i])
			}
			else
			{
				i = i + 1;
			}
		}
	}
</script>

<h1>Edit</h1>

<h4>Review</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form method="post" asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="Id" />
			<div class="form-group">
				<label asp-for="Title" class="control-label"></label>
				<input asp-for="Title" class="form-control" />
				<span asp-validation-for="Title" class="text-danger"></span>
			</div>
			<div id="tagsContainer">
				<label asp-for="Tags" class="control-label"></label><br />
				@{
					int i = 1;
					string stringId;
					foreach (var tag in Model.Tags)
					{
						stringId  = "Tag[" + i + "]";
						<input id=stringId type="text" value="@tag.Tag" asp-for="Tags" onchange="onChangeAdd()" />
						i = i + 1;
					}
					stringId = "Tag[" + i + "]";
					<input id=stringId type="text" value="" asp-for="Tags" onchange="onChangeAdd()" />
					<span asp-validation-for="Tags" class="text-danger"></span>
				}
			</div>
			<div class="form-group">
				<label asp-for="GroupId" class="control-label"></label>
				@Html.DropDownListFor(model => model.GroupId, ViewBag.ReviewGroups as SelectList)
				<span asp-validation-for="GroupId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Rating" class="control-label"></label>
				<input type="number" min="0" max="5" asp-for="Rating" class="form-control" />
				<span asp-validation-for="Rating" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Description" class="control-label"></label>
				<textarea asp-for="Description" class="form-control"></textarea>
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="List">Back to List</a>
</div>

@*@section Scripts {
	@{
	await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	}*@
